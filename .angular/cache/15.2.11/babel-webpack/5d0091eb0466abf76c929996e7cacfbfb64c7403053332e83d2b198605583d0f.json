{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/jah/source/poc/nfc/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport * as i0 from \"@angular/core\";\nexport let NfcReaderComponent = /*#__PURE__*/(() => {\n  class NfcReaderComponent {\n    constructor() {\n      this.message = 'Waiting for NFC tag...';\n    }\n    readNfcTag() {\n      var _this = this;\n      return _asyncToGenerator(function* () {\n        if ('NDEFReader' in window) {\n          try {\n            const ndef = new window.NDEFReader();\n            yield ndef.scan();\n            ndef.onreading = event => {\n              const decoder = new TextDecoder();\n              for (const record of event.message.records) {\n                if (record.recordType === 'text') {\n                  _this.message = decoder.decode(record.data);\n                } else {\n                  _this.message = 'NFC tag read, but it contains non-text data.';\n                }\n              }\n            };\n          } catch (error) {\n            _this.message = `Error: ${error.message}`;\n          }\n        } else {\n          _this.message = 'Web NFC is not supported on this device/browser.';\n        }\n      })();\n    }\n    static #_ = this.ɵfac = function NfcReaderComponent_Factory(t) {\n      return new (t || NfcReaderComponent)();\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: NfcReaderComponent,\n      selectors: [[\"app-nfc-reader\"]],\n      decls: 7,\n      vars: 1,\n      consts: [[3, \"click\"]],\n      template: function NfcReaderComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\")(1, \"h1\");\n          i0.ɵɵtext(2, \"NFC Reader\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"p\");\n          i0.ɵɵtext(4);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(5, \"button\", 0);\n          i0.ɵɵlistener(\"click\", function NfcReaderComponent_Template_button_click_5_listener() {\n            return ctx.readNfcTag();\n          });\n          i0.ɵɵtext(6, \"Read NFC Tag\");\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(4);\n          i0.ɵɵtextInterpolate(ctx.message);\n        }\n      }\n    });\n  }\n  return NfcReaderComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}